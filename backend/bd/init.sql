-- ========================================
-- Inicialización de la Base de Datos
-- Proyecto: Sistema Fiscalías
-- Autor: Daniel Salguero
-- Fecha: 2025
-- ========================================

-- ========================================
-- CREACIÓN DE TABLAS
-- ========================================

-- Tabla TT_ROL
CREATE TABLE TT_ROL (
    ID_ROL INT PRIMARY KEY,
    NOMBRE_ROL VARCHAR(50) NOT NULL UNIQUE
);


-- Tabla TC_FISCALIA
CREATE TABLE TC_FISCALIA (
    ID_FISCALIA INT IDENTITY(1,1) PRIMARY KEY,
    NOMBRE VARCHAR(100) NOT NULL,
    CODIGO_FISCALIA VARCHAR(100) NOT NULL,
    DIRECCION VARCHAR(255),
    TELEFONO VARCHAR(20)
);


-- Tabla TC_ESTADO_CASO
CREATE TABLE TC_ESTADO_CASO (
    ID_ESTADO INT IDENTITY(1,1) PRIMARY KEY,
    NOMBRE_ESTADO VARCHAR(50) NOT NULL UNIQUE
);


-- Tabla TT_FISCAL
CREATE TABLE TT_FISCAL (
    ID_FISCAL INT IDENTITY(1,1) PRIMARY KEY,
    NOMBRE VARCHAR(100) NOT NULL,
    APELLIDO VARCHAR(100) NOT NULL,
    CUI VARCHAR(13) NOT NULL,
    EMAIL VARCHAR(100) NULL UNIQUE,
    TELEFONO VARCHAR(20) NULL,
    USUARIO VARCHAR(50) NOT NULL UNIQUE,
    PASSWORD VARCHAR(255) NOT NULL,
    ID_FISCALIA INT NOT NULL,
    ID_ROL INT NOT NULL DEFAULT 2,
    FOREIGN KEY (ID_FISCALIA) REFERENCES TC_FISCALIA(ID_FISCALIA),
    FOREIGN KEY (ID_ROL) REFERENCES TT_ROL(ID_ROL)
);


-- Tabla TT_CASO
CREATE TABLE TT_CASO (
    ID_CASO INT IDENTITY(1,1) PRIMARY KEY,
    CORRELATIVO VARCHAR(30) NOT NULL,
    DESCRIPCION TEXT NULL,
    FECHA_INICIO DATE NOT NULL,
    ID_ESTADO INT NOT NULL,
    ID_FISCALIA INT NOT NULL,
    ID_FISCAL INT NOT NULL,
    FOREIGN KEY (ID_ESTADO) REFERENCES TC_ESTADO_CASO(ID_ESTADO),
    FOREIGN KEY (ID_FISCALIA) REFERENCES TC_FISCALIA(ID_FISCALIA),
    FOREIGN KEY (ID_FISCAL) REFERENCES TT_FISCAL(ID_FISCAL)
);


-- Tabla TT_LOG
CREATE TABLE TT_LOG (
    ID_LOG INT IDENTITY(1,1) PRIMARY KEY,
    ID_CASO INT NOT NULL,
    ID_FISCAL_ACTUAL INT NOT NULL,
    ID_FISCAL_PROPUESTO INT NOT NULL,
    FECHA_INTENTO DATETIME NOT NULL DEFAULT GETDATE(),
    OBSERVACION VARCHAR(500) NULL,
    FOREIGN KEY (ID_CASO) REFERENCES TT_CASO(ID_CASO),
    FOREIGN KEY (ID_FISCAL_ACTUAL) REFERENCES TT_FISCAL(ID_FISCAL),
    FOREIGN KEY (ID_FISCAL_PROPUESTO) REFERENCES TT_FISCAL(ID_FISCAL)
);

--SPLIT--

-- ========================================
-- INSERTS INICIALES
-- ========================================

-- INSERTS para TT_ROL
    INSERT INTO TT_ROL (ID_ROL, NOMBRE_ROL) VALUES (1, 'ADMINISTRADOR'), (2, 'FISCAL');


-- INSERTS para TC_ESTADO_CASO
    INSERT INTO TC_ESTADO_CASO (NOMBRE_ESTADO) VALUES ('PENDIENTE'), ('EN PROCESO'), ('CERRADO');


-- INSERTS para TC_FISCALIA
INSERT INTO TC_FISCALIA (NOMBRE, CODIGO_FISCALIA, DIRECCION, TELEFONO)
VALUES 
('Fiscalía Central', 'FC001', 'Avenida Reforma 123', '2233-4455'),
('Fiscalía Norte', 'FN002', 'Zona 18, Calle Real', '2299-8877'),
('Fiscalía Sur', 'FS003', 'Boulevard Los Próceres', '2244-7766');


-- INSERTS para TT_FISCAL
INSERT INTO TT_FISCAL (NOMBRE, APELLIDO, CUI, EMAIL, TELEFONO, USUARIO, PASSWORD, ID_FISCALIA,ID_ROL)
VALUES 
('Luis', 'Gómez', '1234567890123', 'lgomez@fiscalia.gt', '5555-1111', 'lgomez', 'abc123', 1, 1),
('María', 'Ramírez', '9876543210987', 'mramirez@fiscalia.gt', '5555-2222', 'mramirez', 'abc123', 2, 2),
('Carlos', 'Pérez', '4567891234567', 'cperez@fiscalia.gt', '5555-3333', 'cperez', 'hashedpassword3', 3, 2),
('Carlos', 'Ramírez', '1234567890124', 'carlos.ramirez@example.com', '555-0001', 'carlosr', 'password1', 1, 2),
('María', 'Lopez', '1234567890125', 'maria.lopez@example.com', '555-0002', 'marial', 'password2', 2, 2),
('Fernando', 'Martínez', '1234567890126', 'fernando.martinez@example.com', '555-0003', 'fernandom', 'password3', 2, 2);


-- INSERTS para TT_CASO 
INSERT INTO TT_CASO (CORRELATIVO, DESCRIPCION, FECHA_INICIO, ID_ESTADO, ID_FISCALIA, ID_FISCAL)
VALUES 
('MP-001-2025', 'Investigación de robo a comercio', '2025-01-15', 1, 1, 1),
('MP-002-2025', 'Denuncia de corrupción municipal', '2025-02-10', 2, 2, 2),
('MP-003-2025', 'Caso de violencia intrafamiliar', '2025-03-05', 1, 3, 3),
('MP-004-2025', 'Fraude en licitaciones públicas', '2025-04-01', 2, 1, 1),
('MP-005-2025', 'Allanamiento ilegal', '2025-04-10', 1, 2, 2),
('MP-006-2025', 'Extorsión telefónica', '2025-04-15', 3, 1, 1),
('MP-007-2025', 'Homicidio en investigación', '2025-05-02', 2, 3, 3),
('MP-008-2025', 'Tráfico de influencias', '2025-05-05', 1, 2, 2),
('MP-009-2025', 'Lesiones graves', '2025-05-10', 3, 1, 1),
('MP-010-2025', 'Investigación por lavado de dinero', '2025-05-12', 1, 3, 3),
('MP-011-2025', 'Caso de abuso de autoridad', '2025-05-15', 2, 2, 2),
('MP-012-2025', 'Delito cibernético', '2025-05-18', 1, 1, 1),
('MP-013-2025', 'Investigación de secuestro', '2025-05-20', 3, 3, 3),
('MP-014-2025', 'Caso de falsificación de documentos', '2025-05-22', 1, 2, 2),
('MP-015-2025', 'Acoso sexual laboral', '2025-05-25', 2, 3, 3),
('MP-016-2025', 'Investigación de contrabando', '2025-05-28', 1, 1, 1),
('MP-017-2025', 'Malversación de fondos públicos', '2025-05-30', 3, 2, 2),
('MP-018-2025', 'Investigación de trata de personas', '2025-06-01', 1, 3, 3);


--SPLIT--
-- ========================================
-- PROCEDIMIENTOS ALMACENADOS
-- ========================================

-- SP_ASIGNAR_FISCAL_A_CASO
CREATE OR ALTER PROCEDURE SP_ASIGNAR_FISCAL_A_CASO
    @ID_CASO INT,
    @ID_FISCAL_NUEVO INT
AS
BEGIN
    SET NOCOUNT ON;
    DECLARE @ID_FISCAL_ACTUAL INT, @ID_FISCALIA_ACTUAL INT, @ID_FISCALIA_NUEVA INT, @ID_ESTADO INT;
    SELECT @ID_FISCAL_ACTUAL = ID_FISCAL FROM TT_CASO WHERE ID_CASO = @ID_CASO;
    SELECT @ID_ESTADO = ID_ESTADO FROM TT_CASO WHERE ID_CASO = @ID_CASO;
    IF @ID_ESTADO <> 1 BEGIN RAISERROR('El caso no está en estado PENDIENTE y no puede ser reasignado.', 16, 1); RETURN; END
    SELECT @ID_FISCALIA_NUEVA = ID_FISCALIA FROM TT_FISCAL WHERE ID_FISCAL = @ID_FISCAL_NUEVO;
    IF @ID_FISCAL_ACTUAL IS NULL BEGIN UPDATE TT_CASO SET ID_FISCAL = @ID_FISCAL_NUEVO WHERE ID_CASO = @ID_CASO; RETURN; END
    SELECT @ID_FISCALIA_ACTUAL = ID_FISCALIA FROM TT_FISCAL WHERE ID_FISCAL = @ID_FISCAL_ACTUAL;
    IF @ID_FISCALIA_ACTUAL = @ID_FISCALIA_NUEVA
        UPDATE TT_CASO SET ID_FISCAL = @ID_FISCAL_NUEVO WHERE ID_CASO = @ID_CASO;
    ELSE BEGIN
        INSERT INTO TT_LOG (ID_CASO, ID_FISCAL_ACTUAL, ID_FISCAL_PROPUESTO, OBSERVACION)
        VALUES (@ID_CASO, @ID_FISCAL_ACTUAL, @ID_FISCAL_NUEVO, 'ERROR: Fiscal nuevo no pertenece a la misma fiscalía que el actual.');
        RAISERROR('No se puede asignar el fiscal: pertenece a una fiscalía diferente.', 16, 1);
    END
END;

--SPLIT--

-- SP_CAMBIAR_ESTADO_CASO
CREATE OR ALTER PROCEDURE SP_CAMBIAR_ESTADO_CASO
    @ID_CASO INT,
    @ID_ESTADO_NUEVO INT
AS
BEGIN
    SET NOCOUNT ON;
    IF NOT EXISTS (SELECT 1 FROM TT_CASO WHERE ID_CASO = @ID_CASO)
        BEGIN RAISERROR('El caso especificado no existe.', 16, 1); RETURN; END
    IF NOT EXISTS (SELECT 1 FROM TC_ESTADO_CASO WHERE ID_ESTADO = @ID_ESTADO_NUEVO)
        BEGIN RAISERROR('El estado especificado no existe.', 16, 1); RETURN; END
    UPDATE TT_CASO SET ID_ESTADO = @ID_ESTADO_NUEVO WHERE ID_CASO = @ID_CASO;
END;

--SPLIT--

-- SP_ELIMINAR_LOG
CREATE OR ALTER PROCEDURE SP_ELIMINAR_LOG
    @ID_LOG INT
AS
BEGIN
    SET NOCOUNT ON;
    IF NOT EXISTS (SELECT 1 FROM TT_LOG WHERE ID_LOG = @ID_LOG)
        BEGIN RAISERROR('El registro de log especificado no existe.', 16, 1); RETURN; END
    DELETE FROM TT_LOG WHERE ID_LOG = @ID_LOG;
END;

--SPLIT--

-- SP_LOGIN_FISCAL
CREATE OR ALTER PROCEDURE SP_LOGIN_FISCAL
    @USUARIO VARCHAR(100),
    @PASSWORD VARCHAR(100)
AS
BEGIN
    SET NOCOUNT ON;
    SELECT F.ID_FISCAL, F.NOMBRE, F.APELLIDO, F.USUARIO, F.ID_ROL, R.NOMBRE_ROL
    FROM TT_FISCAL F
    JOIN TT_ROL R ON R.ID_ROL = F.ID_ROL
    WHERE F.USUARIO = @USUARIO AND F.PASSWORD = @PASSWORD;
END;

--SPLIT--

-- SP_OBTENER_CASOS_POR_FISCALIA
CREATE OR ALTER PROCEDURE SP_OBTENER_CASOS_POR_FISCALIA
    @ID_FISCALIA INT
AS
BEGIN
    SET NOCOUNT ON;
    SELECT CASO.ID_CASO, CASO.CORRELATIVO, CASO.FECHA_INICIO, FISCALIA.NOMBRE AS NOMBRE_FISCALIA,
           FISCAL.NOMBRE + ' ' + FISCAL.APELLIDO AS NOMBRE_FISCAL, ESTADO.NOMBRE_ESTADO
    FROM TT_CASO CASO
    JOIN TC_ESTADO_CASO ESTADO ON ESTADO.ID_ESTADO = CASO.ID_ESTADO
    JOIN TC_FISCALIA FISCALIA ON FISCALIA.ID_FISCALIA = CASO.ID_FISCALIA
    JOIN TT_FISCAL FISCAL ON FISCAL.ID_FISCAL = CASO.ID_FISCAL
    WHERE CASO.ID_FISCALIA = @ID_FISCALIA;
END;

--SPLIT--

-- SP_OBTENER_FISCALES_POR_FISCALIA
CREATE OR ALTER PROCEDURE SP_OBTENER_FISCALES_POR_FISCALIA
    @ID_FISCALIA INT
AS
BEGIN
    SET NOCOUNT ON;
    SELECT ID_FISCAL, NOMBRE, APELLIDO, CUI, EMAIL, TELEFONO, USUARIO
    FROM TT_FISCAL
    WHERE ID_FISCALIA = @ID_FISCALIA;
END;

--SPLIT--

-- SP_OBTENER_LOG_ASIGNACIONES
CREATE OR ALTER PROCEDURE SP_OBTENER_LOG_ASIGNACIONES
AS
BEGIN
    SET NOCOUNT ON;
    SELECT L.ID_LOG, L.ID_CASO, C.CORRELATIVO AS CASO_CORRELATIVO, L.ID_FISCAL_ACTUAL,
           F1.NOMBRE + ' ' + F1.APELLIDO AS NOMBRE_FISCAL_ACTUAL, L.ID_FISCAL_PROPUESTO,
           F2.NOMBRE + ' ' + F2.APELLIDO AS NOMBRE_FISCAL_PROPUESTO, L.FECHA_INTENTO, L.OBSERVACION
    FROM TT_LOG L
    JOIN TT_CASO C ON C.ID_CASO = L.ID_CASO
    JOIN TT_FISCAL F1 ON F1.ID_FISCAL = L.ID_FISCAL_ACTUAL
    JOIN TT_FISCAL F2 ON F2.ID_FISCAL = L.ID_FISCAL_PROPUESTO
    ORDER BY L.FECHA_INTENTO DESC;
END;

--SPLIT--

-- SP_OBTENER_TODAS_LAS_FISCALIAS
CREATE OR ALTER PROCEDURE SP_OBTENER_TODAS_LAS_FISCALIAS
AS
BEGIN
    SET NOCOUNT ON;
    SELECT ID_FISCALIA, NOMBRE, CODIGO_FISCALIA, DIRECCION, TELEFONO
    FROM TC_FISCALIA;
END;

--SPLIT--

-- SP_OBTENER_TODOS_LOS_CASOS
CREATE OR ALTER PROCEDURE SP_OBTENER_TODOS_LOS_CASOS
AS
BEGIN
    SET NOCOUNT ON;
    SELECT CASO.ID_CASO, CASO.CORRELATIVO, CASO.FECHA_INICIO, FISCALIA.NOMBRE AS NOMBRE_FISCALIA,
           FISCAL.NOMBRE + ' ' + FISCAL.APELLIDO AS NOMBRE_FISCAL, ESTADO.NOMBRE_ESTADO
    FROM TT_CASO CASO
    JOIN TC_ESTADO_CASO ESTADO ON ESTADO.ID_ESTADO = CASO.ID_ESTADO
    JOIN TC_FISCALIA FISCALIA ON FISCALIA.ID_FISCALIA = CASO.ID_FISCALIA
    JOIN TT_FISCAL FISCAL ON FISCAL.ID_FISCAL = CASO.ID_FISCAL;
END;

--SPLIT--

-- SP_OBTENER_TODOS_LOS_ESTADOS_CASO
CREATE OR ALTER PROCEDURE SP_OBTENER_TODOS_LOS_ESTADOS_CASO
AS
BEGIN
    SET NOCOUNT ON;
    SELECT ID_ESTADO, NOMBRE_ESTADO FROM TC_ESTADO_CASO;
END;

--SPLIT--

-- SP_OBTENER_TODOS_LOS_FISCALES
CREATE OR ALTER PROCEDURE SP_OBTENER_TODOS_LOS_FISCALES
AS
BEGIN
    SET NOCOUNT ON;
    SELECT ID_FISCAL, NOMBRE, APELLIDO, CUI, EMAIL, TELEFONO, USUARIO
    FROM TT_FISCAL;
END;


-- ========================================
-- FIN DEL SCRIPT
-- ========================================
